<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gmail.mosoft521.cp.jxc.dao.EmpMapper">
  <resultMap id="BaseResultMap" type="com.gmail.mosoft521.cp.jxc.entity.Emp">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="manage_type_id" jdbcType="INTEGER" property="manageTypeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, dept_id, manage_type_id, name, tel, user_name, password, sex, birthday, degree
  </sql>
  <select id="selectByExample" parameterType="com.gmail.mosoft521.cp.jxc.entity.EmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gmail.mosoft521.cp.jxc.entity.EmpExample">
    delete from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gmail.mosoft521.cp.jxc.entity.Emp">
    <selectKey keyProperty="empId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into emp (dept_id, manage_type_id, name, 
      tel, user_name, password, 
      sex, birthday, degree
      )
    values (#{deptId,jdbcType=INTEGER}, #{manageTypeId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, #{degree,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gmail.mosoft521.cp.jxc.entity.Emp">
    <selectKey keyProperty="empId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="manageTypeId != null">
        manage_type_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="degree != null">
        degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="manageTypeId != null">
        #{manageTypeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gmail.mosoft521.cp.jxc.entity.EmpExample" resultType="java.lang.Long">
    select count(*) from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emp
    <set>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.manageTypeId != null">
        manage_type_id = #{record.manageTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emp
    set emp_id = #{record.empId,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      manage_type_id = #{record.manageTypeId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      degree = #{record.degree,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gmail.mosoft521.cp.jxc.entity.Emp">
    update emp
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="manageTypeId != null">
        manage_type_id = #{manageTypeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gmail.mosoft521.cp.jxc.entity.Emp">
    update emp
    set dept_id = #{deptId,jdbcType=INTEGER},
      manage_type_id = #{manageTypeId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      degree = #{degree,jdbcType=VARCHAR}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>